name: Release Solver

on:
  push:
    tags:
      - 'v*.*.*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm dpkg cmake build-essential

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install wix -y
          choco install cmake -y

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install cmake

      - name: Configure CMake
        run: cmake -S . -B build

      - name: Build
        run: cmake --build build --config Release

      - name: Package (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd build
          cpack -G DEB
          cpack -G RPM

      - name: Package (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd build
          cpack -G WIX

      - name: Package (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cd build
          cpack -G DragNDrop

      # Разбитие загрузки артефактов на отдельные шаги, чтобы снизить нагрузку памяти
      - name: Upload Linux DEB artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: Linux-DEB
          path: build/*.deb

      - name: Upload Linux RPM artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: Linux-RPM
          path: build/*.rpm

      - name: Upload Windows MSI artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: Windows-MSI
          path: build/*.msi

      - name: Upload macOS DMG artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        env:
          NODE_OPTIONS: --max-old-space-size=4096
        with:
          name: MacOS-DMG
          path: build/*.dmg

release:
  needs: build
  runs-on: ubuntu-latest

  steps:
    - name: Download all Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: Linux-DEB
        path: artifacts/linux-deb

    - name: Download all Linux RPM artifacts
      uses: actions/download-artifact@v4
      with:
        name: Linux-RPM
        path: artifacts/linux-rpm

    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: Windows-MSI
        path: artifacts/windows-msi

    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: MacOS-DMG
        path: artifacts/macos-dmg

    - name: List downloaded files
      run: ls -R artifacts

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Solver Release ${{ github.ref_name }}
        body: Solver packaged for all platforms (DEB, RPM, MSI, DMG)
        files: |
          artifacts/linux-deb/*.deb
          artifacts/linux-rpm/*.rpm
          artifacts/windows-msi/*.msi
          artifacts/macos-dmg/*.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
